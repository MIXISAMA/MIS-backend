# Generated by Django 3.0.4 on 2020-04-21 14:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DetailedRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField(verbose_name='子序号')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
                ('full_indicator', models.FloatField(default=1.0, verbose_name='总指标值')),
                ('indicator_warning_line', models.FloatField(default=0.65, verbose_name='预警指标值')),
            ],
            options={
                'verbose_name': '指标点',
                'verbose_name_plural': '指标点',
            },
        ),
        migrations.CreateModel(
            name='FieldOfStudy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='专业方向名称')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
            ],
            options={
                'verbose_name': '专业方向',
                'verbose_name_plural': '专业方向',
            },
        ),
        migrations.CreateModel(
            name='IndicatorFactor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factor', models.FloatField(verbose_name='指标系数')),
            ],
            options={
                'verbose_name': '支撑课程以及指标系数',
                'verbose_name_plural': '支撑课程以及指标系数',
            },
        ),
        migrations.CreateModel(
            name='OfferingCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_type', models.CharField(choices=[('通识通修课程', '通识通修课程'), ('专业平台课', '专业平台课'), ('专业核心课', '专业核心课'), ('集中实验环节', '集中实验环节'), ('专业分方向选修课', '专业分方向选修课'), ('专业选修课', '专业选修课')], max_length=10, verbose_name='课程类型')),
                ('course_property', models.CharField(choices=[('必修', '必修'), ('指选', '指选'), ('任选', '任选'), ('跨专业选修', '跨专业选修')], max_length=10, verbose_name='课程性质')),
                ('number', models.CharField(blank=True, max_length=15, null=True, verbose_name='课程编号')),
                ('name', models.CharField(max_length=50, verbose_name='课程名称')),
                ('credit', models.FloatField(verbose_name='学分')),
                ('total_period', models.IntegerField(verbose_name='总学时')),
                ('teaching_period', models.IntegerField(verbose_name='课堂教学学时')),
                ('experiment_period', models.IntegerField(default=0, verbose_name='课程实验学时')),
                ('practice_period', models.IntegerField(default=0, verbose_name='课程实习学时')),
                ('semester', models.CharField(blank=True, max_length=50, null=True, verbose_name='开课学期')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
            ],
            options={
                'verbose_name': '开设课程',
                'verbose_name_plural': '开设课程',
            },
        ),
        migrations.CreateModel(
            name='RoughRequirement',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='序号')),
                ('title', models.CharField(max_length=50, verbose_name='标题')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
                ('full_indicator', models.FloatField(default=1.0, verbose_name='总指标值')),
                ('indicator_warning_line', models.FloatField(default=0.65, verbose_name='预警指标值')),
            ],
            options={
                'verbose_name': '毕业要求',
                'verbose_name_plural': '毕业要求',
            },
        ),
        migrations.AddIndex(
            model_name='offeringcourse',
            index=models.Index(fields=['number'], name='plan_offeri_number_014ba2_idx'),
        ),
        migrations.AddField(
            model_name='indicatorfactor',
            name='detailed_requirement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicator_factors', to='plan.DetailedRequirement', verbose_name='指标点'),
        ),
        migrations.AddField(
            model_name='indicatorfactor',
            name='field_of_study',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='plan.FieldOfStudy', verbose_name='专业方向'),
        ),
        migrations.AddField(
            model_name='indicatorfactor',
            name='offering_course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicator_factors', to='plan.OfferingCourse', verbose_name='课程'),
        ),
        migrations.AddField(
            model_name='detailedrequirement',
            name='rough_requirement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detailed_requirements', to='plan.RoughRequirement', verbose_name='毕业要求'),
        ),
        migrations.AddConstraint(
            model_name='indicatorfactor',
            constraint=models.UniqueConstraint(fields=('detailed_requirement', 'field_of_study', 'offering_course'), name='unique_indicator_factor'),
        ),
        migrations.AlterUniqueTogether(
            name='indicatorfactor',
            unique_together={('detailed_requirement', 'field_of_study', 'offering_course')},
        ),
        migrations.AddConstraint(
            model_name='detailedrequirement',
            constraint=models.UniqueConstraint(fields=('rough_requirement', 'index'), name='unique_detailed_requirement'),
        ),
        migrations.AlterUniqueTogether(
            name='detailedrequirement',
            unique_together={('rough_requirement', 'index')},
        ),
    ]
